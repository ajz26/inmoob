<?php

namespace CCOM_CORE\Shortcodes\SearchForm;
use CCOM_CORE\Classes\Helpers;
abstract class Select extends Field {

    static $component_namespace = "CCOM_CORE\\Components\\SearchForm";

    static function generate_css(){

    }

    public static function generate_option_html(array $option = array())  {
        $shortcode                      = self::$shortcode;
        $multiple                       = self::get_atts('multiple',false);
        $type                           = self::get_atts('type','selector');
        $name                           = self::get_atts('name',false);
        $name_nice 					    = sanitize_title($name);
        $value                          = $option['value'];
        $uniqid 					    = self::get_atts('uniqid',false);
        $option_id 					    = "opt__{$uniqid}_{$name_nice}-{$value}";

        $value_friendly 			    = $option['value_friendly'];
        $selected 					    = ((isset($option['selected']) && !empty($option['selected']) ) && $option['selected'] == true ) ? ' checked="checked"' : '';
        $icon                           = sanitize_title($value_friendly);
        $data                           = isset($option['data']) ? (array)$option['data'] : false;
        $data                           = ($data) ? Helpers::array_to_attr($data) : false;
        $data                           = urldecode ( $data );
        $select_item = null;

        if ( has_filter( "before_generate_option_html_{$shortcode}" ) ) {
            $select_item .= apply_filters( "before_generate_option_html_{$shortcode}", $option , $select_item );
        }


        $select_item .= "<div class='caja-lista--item caja-lista--item__{$type}'>";
        
        if($multiple){
            $select_item .= "<input type='checkbox' id='{$option_id}' {$data} data-name='{$name_nice}' name='{$name_nice}[]' value='{$value}' class='{$option_id} input-buscador input-buscador--{$name_nice}' $selected>";
        }else{
            $select_item .= "<input type='radio' id='{$option_id}' {$data} data-name='{$name_nice}' name='{$name_nice}' value='{$value}' class='{$option_id} input-buscador input-buscador--{$name_nice}' $selected>";
        }

        if ( has_filter( "after_generate_option_html_{$shortcode}" ) ) {
            $select_item .= apply_filters( "after_generate_option_html_{$shortcode}", $option , $select_item );
        }

        $select_item .= "<label for='{$option_id}'>";


        if ( has_filter( "select_with_images_{$shortcode}" ) ) {
            $select_item .= apply_filters( "select_with_images_{$shortcode}", $option , $select_item );
        }
        
        $select_item .= '<div class="caja-lista--item--txt">';


        // sección donde se genera el label
        $label  = '<div class="to-ellipsis" label="' . $value_friendly . '">' . $value_friendly . '</div>';

        if ( has_filter( "override_label_generate_option_html_{$shortcode}" ) ) {
            $label = apply_filters( "override_label_generate_option_html_{$shortcode}", $option , $label );
        }
        // sección donde se genera el label


        $select_item .= $label;
        $select_item .= '</div></label>';

        $select_item .= '</div>';
            

        return $select_item;

    }


    public static function generate_html(){

        $uniqid                     = self::get_atts('uniqid',false);
        $classes                    = self::get_atts('classes',false);
        $name                       = self::get_atts('name',false);
        $values                     = self::get_atts('values',false);
        $label                      = self::get_atts('label',false);
        $active_filter_text         = self::get_atts('active_filter_text',false);
        $name_nice                  = sanitize_title($name);
        $select                     = $select_item = null;

        foreach((array)$values as $option){
            $select_item .= self::generate_option_html($option);
        }
       

        $select .= "<div class='col-12 px-0 search-col--{$uniqid} search-col--{$name_nice} search-col {$classes}' data-active_filter_text='{$active_filter_text}'>";
        $select .= ($label) ? '<div class="label-fake">' . $label . '</div>' : false;
        $select .= self::generate_items_container($select_item);
        $select .="</div>";

    return $select;

    }

    static function set_default_atts(){
        static::$attributes_defaults = array_merge(static::$attributes_defaults,array(
            'type'          => 'selector',
            'values'        => array(),
            'multiple'      => false,
            'collapsible'   => 'true',
            'collapsed'     => 'true',
        ));
    }


    public static function generate_items_container($select_item){

        $select         = '';
        $type           = self::get_atts('type', 'selector');
        $extra_class    = self::get_atts('extra_class');
        $placeholder    = self::get_atts('placeholder');
        $icon           = self::get_atts('icon');
        $uniqid         = self::get_atts('uniqid',false);
        $name           = self::get_atts('name');
        $name_nice      = sanitize_title($name);
        $select_id      = "select-{$name_nice}-{$uniqid}";
        $collapsible    = ($type == 'selector')? self::get_atts('collapsible',false) : false;
        $collapsed      = ($type == 'selector' && $collapsible)? self::get_atts('collapsed',false) : false;
        $collapse_class = ($type == 'selector')? (($collapsible)? " collapse" : "") . ((!$collapsed)? " show" : '') : "";
        $extra_class   .= ($collapsible)? " selector-collapsible" . (($collapsed)? " selector-collapsed" : '') : '';

        $select .= "<div class='caja__{$type} {$extra_class}'>";
            if($type == 'selector' && $collapsible){
                $select .= "<div class='caja__{$type}--label'" . (($collapsible)? " data-toggle='collapse' data-target='#{$select_id}' aria-expanded='false' aria-controls='{$select_id}'" : "") . ">
                    <div class='to-ellipsis' label='{$placeholder}' data-name='$name_nice'><span class='custom_placeholder'>{$placeholder}</span><span class='values_selected'></span></div>
                    <i class='{$icon}'></i>
                </div>";
            }
            $select .= "<div class='caja__{$type}-lista {$collapse_class}'" . (($collapsible)? " id='{$select_id}' aria-labelledby='{$select_id}'" : "") . ">
                <div class='caja-lista--content__{$type}'>
                    <!-- inicio listado de opciones-->
                    {$select_item}
                    <!-- inicio listado de opciones-->
                </div>";
            $select .= "</div>";
        $select .= "</div>";

        return $select;
    }

    static function buildAtts($atts = array(), $content = null){
        static::set_default_atts();
        $default = static::$attributes_defaults;
        $_atts   = shortcode_atts($default, $atts);
        self::set_atts($_atts);
        $values = static::get_values();
        self::set_att('values',$values);
    }

    static function output($atts, $content){
        $atts       = self::get_atts();
        $content    = self::generate_html();
        $atts       = self::get_atts();
        return parent::output($atts, $content);
     
    }

}